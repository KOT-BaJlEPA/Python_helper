from PyQt5 import QtWidgets
import sys
app = QtWidgets.QApplication(sys.argv)  # объект приложения, должен быть только один
window = QtWidgets.QWidget()     # объект окна
window.setWindowTitle("Первая программа на PyQt")  # Название окна
window.resize(300, 70)  # минимальные размеры окна(width, height) увеличится автоматически если не все виджеты помещаются
label = QtWidgets.QLabel("<center>Привет, мир!</center>")  # объект надписи, можно использовать html and css
btnQuit = QtWidgets.QPushButton("&Закрыть окно")  # объект кнопки & - горячая клавиша через ALT
vbox = QtWidgets.QVBoxLayout()  # создает вертикальный контейнер,
# размеры, добавляемых в него виджетов будут подогнаны под размеры контейнера. При изменении размера контейнера, размеры
# виджетов автоматически изменятся.
vbox.addWidget(label) # добавляем в контейнер
vbox.addWidget(btnQuit) # добавляем в контейнер
window.setLayout(vbox) # добавляем контейнер в окно
btnQuit.clicked.connect(app.quit) # назначает обработчик сигнала clicked() кнопки, который генерируется при ее нажатии.
# Этот сигнал доступен через одноименный атрибут класса кнопки и поддерживает метод
# connect(), который и назначает для него обработчик, передаваемый первым параметром.
# Обработчик представляет собой метод quit() объекта приложения, выполняющий немед-
# ленное завершение его работы.
window.show() # выводит на экран окно и все компоненты, которые мы ранее в него добавили.
sys.exit(app.exec_()) # запускает бесконечный цикл обработки событий в приложении.
# Код, расположенный после вызова метода exec_(), будет выполнен только после завершения работы приложения



